import nodemailer from 'nodemailer';

const handler = async (req, res) => {
  if (req.method === 'POST') {
    const { name, email, subject, message } = req.body;

    // Validate the form input
    if (!name || !email || !subject || !message) {
      return res.status(400).json({ error: 'All fields are required.' });
    }

    try {
      // Set up the nodemailer transport object
      const transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          user: process.env.GMAIL_USER, spark.official.my@gmail.com
          pass: process.env.GMAIL_PASSWORD, sparK20066002

        },
      });

      // Set up the email options
      const mailOptions = {
        from: `"${name}" <${email}>`, // Sender's info
        to: 'spark.official.my@gmail.com', // Recipient's email
        subject: `New Message from ${subject}`, // Subject line
        text: `You have a new message from ${name} (${email}):\n\n${message}`, // Email body content
      };

      // Send the email
      await transporter.sendMail(mailOptions);

      // Return a success response
      return res.status(200).json({ success: true, message: 'Message sent successfully!' });
    } catch (error) {
      console.error('Error sending email:', error);
      return res.status(500).json({ error: 'Failed to send the email. Please try again later.' });
    }
  } else {
    // Handle any other HTTP methods
    res.setHeader('Allow', ['POST']);
    return res.status(405).json({ error: `Method ${req.method} not allowed.` });
  }
};

export default handler;
